/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminPanels;

import Business.Branch;
import Business.UserAccount;
import Business.Business;
import Business.UserAccountDirectory;
import Customer.Customer;
import Customer.Employee;
import Role.CustomerRole;
import Role.LibrarianAdminRole;
import Role.BranchAdminRole;
import Role.Role;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prasad
 */
public class UserRegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserRegistrationJPanel
     */
    
    private Business business;
    DefaultTableModel usersTableModel;
    
    public UserRegistrationJPanel(Business business) {
        initComponents();
        this.business = business;
        this.usersTableModel = (DefaultTableModel) usersJTable.getModel();
        
        displayUsers();
        populateCustomersAndEmployees();
    }
    
    private void displayUsers() {
        ArrayList<UserAccount> users = this.business.getTopLevelUserAccountDirectory().getUseraccountlist();
        if(users.size() >= 0) {
            usersTableModel.setRowCount(0);
            for(UserAccount u: users) {
                Object row[] = new Object[3];
                row[0] = u.getUsername();
                row[1] = u.getRole().toString();
                row[2] = u.getPersonId();
                usersTableModel.addRow(row);
            }
        }
    }
    
    private void populateCustomersAndEmployees() {
        ArrayList<Customer> customers = this.business.getCustomersList().getCustomerlist();
        
        for(Customer c: customers) {
            customerCBox.addItem(c.getPersonID());
        }
        
        ArrayList<Employee> emps = this.business.getEmployeesList().getEmployees();
        
        for(Employee e: emps) {
            empXBox.addItem(e.getPersonID());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        custUserNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        custPasswordTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        customerCBox = new javax.swing.JComboBox<>();
        registerCustomerBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        empUsernameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        empPasswordTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        empXBox = new javax.swing.JComboBox<>();
        registerEmpButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersJTable = new javax.swing.JTable();

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        jLabel3.setText("Customer");

        registerCustomerBtn.setText("Register Customer");
        registerCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerCustomerBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        jLabel6.setText("Employee");

        registerEmpButton.setText("Register Employee");
        registerEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerEmpButtonActionPerformed(evt);
            }
        });

        usersJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Role", "PersonId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(usersJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(custUserNameTextField)
                                        .addComponent(custPasswordTextField)
                                        .addComponent(customerCBox, 0, 141, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(empUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(empXBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(empPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(registerCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(registerEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(custUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(custPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(customerCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(registerCustomerBtn)
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empXBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(registerEmpButton)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void registerCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerCustomerBtnActionPerformed
        String username = custUserNameTextField.getText();
        String password = custPasswordTextField.getText();
        String personId = customerCBox.getSelectedItem().toString();
        
        if (this.business.getTopLevelUserAccountDirectory().checkIfUserExists(username))
        {
            JOptionPane.showMessageDialog(null, "User already exists!");
        }
        else{
            UserAccountDirectory userAccounts = this.business.getTopLevelUserAccountDirectory();                
            userAccounts.createUserAccount(username, password, new CustomerRole(), personId);
            
            displayUsers();

            custUserNameTextField.setText("");
            custPasswordTextField.setText("");
            customerCBox.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_registerCustomerBtnActionPerformed

    private void registerEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerEmpButtonActionPerformed
        String username = empUsernameTextField.getText();
        String password = empPasswordTextField.getText();
        String personId = empXBox.getSelectedItem().toString();
        
        
        if (this.business.getTopLevelUserAccountDirectory().checkIfUserExists(username))
        {
            JOptionPane.showMessageDialog(null, "User already exists!");
        }
        else{
            Employee emp = this.business.getEmployeesList().findEmployee(personId);
            UserAccountDirectory userAccounts = this.business.getTopLevelUserAccountDirectory();
            String branchId = emp.getBranch().getBranchId();
            
            Branch currentBranch = this.business.getBranches().findBranch(branchId);
            
            if (emp.getDesignation().toLowerCase().equals("librarian"))
            {
                userAccounts.createUserAccount(username, password, new LibrarianAdminRole(), personId);
                Employee currentLibEmployee = currentBranch.getLibrary().getEmployees().findEmployee(personId);
                currentLibEmployee.setUserAccount(userAccounts.findById(username));
                //currentBranch.getBranchuseraccountDirectory().createUserAccount(username, password, emp, personId)
            }
            else
            {
                userAccounts.createUserAccount(username, password, new BranchAdminRole(), personId);
                Employee currentLibEmployee = currentBranch.getLibrary().getEmployees().findEmployee(personId);
                currentLibEmployee.setUserAccount(userAccounts.findById(username));
            }
            
            
            displayUsers();

            empUsernameTextField.setText("");
            empPasswordTextField.setText("");
            empXBox.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_registerEmpButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField custPasswordTextField;
    private javax.swing.JTextField custUserNameTextField;
    private javax.swing.JComboBox<String> customerCBox;
    private javax.swing.JTextField empPasswordTextField;
    private javax.swing.JTextField empUsernameTextField;
    private javax.swing.JComboBox<String> empXBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton registerCustomerBtn;
    private javax.swing.JButton registerEmpButton;
    private javax.swing.JTable usersJTable;
    // End of variables declaration//GEN-END:variables
}

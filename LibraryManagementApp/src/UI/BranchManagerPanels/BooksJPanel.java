/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.BranchManagerPanels;
import Business.Branch;
import Business.Business;
import Business.Library;
import Business.UserAccount;
import Customer.Employee;
import Customer.EmployeeDirectory;
import Material.Book;
import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chilukuri
 */
public class BooksJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Books
     */
    
    private Branch branch;
    DefaultTableModel booksTableModel;
    
    public BooksJPanel(Branch branch) {
        initComponents();
        this.branch = branch;
        this.booksTableModel = (DefaultTableModel) bmBooksJTable.getModel();
        
        displayBooks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bmBooksJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 204));

        bmBooksJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "S.No", "Name", "Reg Dt", "Is Available", "Author", "Genre", "Num of Pages", "Language", "Binding Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bmBooksJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(321, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bmBooksJTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void displayBooks() {
        ArrayList<Book> books = this.branch.getLibrary().getBooks().getBooksList();
        
        if(books.size() >= 0) {
            booksTableModel.setRowCount(0);
            for(Book b: books) {
                Object row[] = new Object[9];
                row[0] = b.getSerialNumber();
                row[1] = b.getName();
                row[2] = b.getRegisteredDate();
                row[3] = b.getIsAvailable();
                row[4] = b.getAuthor().getAuthorName();
                row[5] = b.getGenre().getName();
                row[6] = b.getNumPages();
                row[7] = b.getLanguage();
                row[8] = b.getBindingType();
                booksTableModel.addRow(row);
            }
        }
        
    }
}
